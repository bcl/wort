<doctype !html>
<html>
<head>
	<title>Digitemp Sensor Graphs</title>
</head>
<body>
        <svg width="960" height="500"></svg>
	<main></main>
        <script src="./static/js/d3.v4.min.js"></script>
	<script src="./static/js/MainApp.js"></script>
	<script>
	var app = new MainApp({
			target: document.querySelector('main'),
			data: { name: 'test' }
			});
	</script>

    <script>
    var svg = d3.select("svg"),
        margin = {top: 20, right: 80, bottom: 30, left: 50},
        width = svg.attr("width") - margin.left - margin.right,
        height = svg.attr("height") - margin.top - margin.bottom,
        g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    // Create scaler for x and y based on data and size of graphing area
    // These can be extended with actual data later by calling .domain on them
    var x = d3.scaleTime().range([0, width]),
        y = d3.scaleLinear().range([height, 0]),
        z = d3.scaleOrdinal(d3.schemeCategory10);

    // Create a line function to plot the data using the scalers defined above
    var line = d3.line()
                 .curve(d3.curveBasis)
                 .x(function(d) { return x(d.date); })
                 .y(function(d) { return y(d.temperature); });

    function chart(data) {

    }

    d3.interval(function() {
        var end_time = Date.now() / 1000;
        var start_time = end_time - (6 * 60 * 60)
        end_time = end_time.toFixed(0);
        start_time = start_time.toFixed(0);

        d3.json('/api/readings/'+start_time+'/'+end_time, function (data) {
            // console.log(data);
            chart(data);
        });
    }, 1500);

    </script>
</body>
</html>
